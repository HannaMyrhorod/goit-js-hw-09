{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,yBAkBtC,SAASI,EAAmBC,EAAUC,IAefC,EAbUF,EAaAG,EAbUF,EAclC,IAAIG,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,GACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MACpBA,OArBFQ,MAAK,EAACT,SAAEA,EAAQC,MAAEA,MACjBb,EAAAsB,OAAOC,QAAQ,qBAAqBX,QAAeC,WAEpDW,OAAM,EAACZ,SAAEA,EAAQC,MAAEA,MAClBb,EAAAsB,OAAOG,QAAQ,oBAAoBb,QAAeC,WAQxD,IAAuBD,EAAUC,EAL/BO,YAAW,SAzBblB,EAAKC,KAAKuB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIf,EAAQgB,OAAO3B,EAAKI,WAAWwB,OAC/BC,EAAOF,OAAO3B,EAAKK,UAAUuB,OAC7BE,EAASH,OAAO3B,EAAKM,YAAYsB,OAErC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCxB,EAAmBwB,EAAGpB,GACtBA,GAASkB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayInput: document.querySelector('input[name = delay]'),\n  stepInput: document.querySelector('input[name = step]'),\n  amountInput: document.querySelector('input[name = amount]'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(refs.delayInput.value);\n  let step = Number(refs.stepInput.value);\n  let amount = Number(refs.amountInput.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    setPromisesTimeout(i, delay);\n    delay += step;\n  };\n};\n\nfunction setPromisesTimeout(position, delay) {\n   \n  const promises = createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notify.success(`Fulfilled promise ${position} in ${delay} ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`Rejected promise ${position} in ${delay} ms`);\n    }); \n  \n  setTimeout(() => {\n    promises, delay\n  });\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n        reject({ position, delay });\n    }, delay);\n  });\n};\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delayInput","stepInput","amountInput","$47d4ff9957288465$var$setPromisesTimeout","position1","delay1","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","Notify","success","catch","failure","addEventListener","event","preventDefault","Number","value","step","amount","i"],"version":3,"file":"03-promises.0eefbb33.js.map"}